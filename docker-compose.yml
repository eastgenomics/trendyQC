# resources:
# http://www.ameyalokare.com/docker/2017/09/20/nginx-flask-postgres-docker-compose.html
# https://github.com/juggernaut/nginx-flask-postgres-docker-compose-example
# https://serverfault.com/questions/783806/docker-how-to-django-uwsgi-gunicorn-nginx/787402
# https://github.com/andrecp/django-tutorial-docker-nginx-postgres
# https://github.com/realpython/dockerizing-django
# http://ruddra.com/2016/08/14/docker-django-nginx-postgres/index.html
# https://stackoverflow.com/questions/32180589/docker-how-to-expose-a-socket-over-a-port-for-a-django-application

version: '3'

services:
  # database containers, one for each db
  db:
    container_name: trendyqc_db
    image: postgres:15.2
    volumes:
      - db:/var/lib/postgresql/data/
    env_file:
      - config/db/qc_trends_db_env

  # web container, with django + gunicorn
  trendyqc:
    container_name: trendyqc_app
    build: .
    image: trendyqc_app
    command: bash -c 'python trendyqc/manage.py collectstatic --no-input && gunicorn -n trendyqc -c ./config/gunicorn/conf.py --bind :8006 --chdir /app/trendyqc trendyqc.wsgi:application'
    environment:
      - DJANGO_SETTINGS_MODULE=trendyqc.settings
    env_file:
      - ./.env
    volumes:
      - static:/app/trendyqc/staticfiles
    depends_on:
      - db

  # reverse proxy container (nginx)
  nginx:
    container_name: trendyqc_proxy
    ports:
      - 8008:80
    image: nginx:1.13
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static:/static/
    environment:
      - VIRTUAL_HOST=dev-genomics.net.addenbrookes.nhs.uk
      - VIRTUAL_PATH=/trendyqc
    depends_on:
      - trendyqc

networks:
  default:
    name: trendyqc_nginx
    external: true

volumes:
  db:
  static:

# Generated by Django 5.1.2 on 2025-01-23 12:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('trend_monitoring', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RNA_seqc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mapping_rate', models.FloatField()),
                ('unique_rate_of_mapped', models.FloatField()),
                ('duplicate_rate_of_mapped', models.FloatField()),
                ('duplicate_rate_of_mapped_excluding_globins', models.FloatField()),
                ('base_mismatch', models.FloatField()),
                ('end_1_mapping_rate', models.FloatField()),
                ('end_2_mapping_rate', models.FloatField()),
                ('end_1_mismatch_rate', models.FloatField(null=True)),
                ('end_2_mismatch_rate', models.FloatField(null=True)),
                ('expression_profiling_efficiency', models.FloatField()),
                ('high_quality_rate', models.FloatField()),
                ('exonic_rate', models.FloatField()),
                ('intronic_rate', models.FloatField()),
                ('intergenic_rate', models.FloatField()),
                ('intragenic_rate', models.FloatField()),
                ('ambiguous_alignment_rate', models.FloatField()),
                ('high_quality_exonic_rate', models.FloatField()),
                ('high_quality_intronic_rate', models.FloatField()),
                ('high_quality_intergenic_rate', models.FloatField()),
                ('high_quality_intragenic_rate', models.FloatField()),
                ('high_quality_ambiguous_alignment_rate', models.FloatField()),
                ('discard_rate', models.FloatField()),
                ('rrna_rate', models.FloatField()),
                ('end_1_sense_rate', models.FloatField()),
                ('end_2_sense_rate', models.FloatField()),
                ('avg_splits_per_read', models.FloatField()),
                ('alternative_alignments', models.FloatField()),
                ('chimeric_reads', models.FloatField()),
                ('chimeric_alignment_rate', models.FloatField()),
                ('duplicate_reads', models.FloatField()),
                ('end_1_antisense', models.FloatField()),
                ('end_2_antisense', models.FloatField()),
                ('end_1_bases', models.FloatField()),
                ('end_2_bases', models.FloatField()),
                ('end_1_mapped_reads', models.FloatField()),
                ('end_2_mapped_reads', models.FloatField()),
                ('end_1_mismatches', models.FloatField()),
                ('end_2_mismatches', models.FloatField()),
                ('end_1_sense', models.FloatField()),
                ('end_2_sense', models.FloatField()),
                ('exonic_reads', models.FloatField()),
                ('failed_vendor_qc', models.FloatField()),
                ('high_quality_reads', models.FloatField()),
                ('intergenic_reads', models.FloatField()),
                ('intragenic_reads', models.FloatField()),
                ('ambiguous_reads', models.FloatField()),
                ('intronic_reads', models.FloatField()),
                ('low_mapping_quality', models.FloatField()),
                ('low_quality_reads', models.FloatField()),
                ('mapped_duplicate_reads', models.FloatField()),
                ('mapped_reads', models.FloatField()),
                ('mapped_unique_reads', models.FloatField()),
                ('mismatched_bases', models.FloatField()),
                ('non_globin_reads', models.FloatField()),
                ('non_globin_duplicate_reads', models.FloatField()),
                ('reads_used_for_intron_exon_counts', models.FloatField()),
                ('rrna_reads', models.FloatField()),
                ('total_bases', models.FloatField()),
                ('total_mapped_pairs', models.FloatField()),
                ('total_read_number', models.FloatField()),
                ('unique_mapping_vendor_qc_passed_reads', models.FloatField()),
                ('unpaired_reads', models.FloatField()),
                ('read_length', models.FloatField()),
                ('genes_detected', models.FloatField()),
                ('estimated_library_complexity', models.FloatField()),
                ('genes_used_in_three_prime_bias', models.FloatField()),
                ('mean_three_prime_bias', models.FloatField()),
                ('median_three_prime_bias', models.FloatField()),
                ('three_prime_bias_std', models.FloatField()),
                ('three_prime_bias_mad_std', models.FloatField()),
                ('three_prime_bias_25th_percentile', models.FloatField()),
                ('three_prime_bias_75th_percentile', models.FloatField()),
                ('average_fragment_length', models.FloatField()),
                ('fragment_length_median', models.FloatField()),
                ('fragment_length_std', models.FloatField()),
                ('fragment_length_mad_std', models.FloatField()),
                ('median_of_avg_transcript_coverage', models.FloatField()),
                ('median_of_transcript_coverage_std', models.FloatField()),
                ('median_of_transcript_coverage_cv', models.FloatField()),
                ('median_exon_cv', models.FloatField()),
                ('exon_cv_mad', models.FloatField()),
                ('sample', models.CharField()),
            ],
            options={
                'db_table': 'rna_seqc',
            },
        ),
        migrations.CreateModel(
            name='RNAseq_metrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pf_bases', models.FloatField()),
                ('pf_aligned_bases', models.FloatField()),
                ('ribosomal_bases', models.FloatField(null=True)),
                ('coding_bases', models.FloatField()),
                ('utr_bases', models.FloatField()),
                ('intronic_bases', models.FloatField()),
                ('intergenic_bases', models.FloatField()),
                ('ignored_reads', models.FloatField()),
                ('correct_strand_reads', models.FloatField()),
                ('incorrect_strand_reads', models.FloatField()),
                ('num_r1_transcript_strand_reads', models.FloatField()),
                ('num_r2_transcript_strand_reads', models.FloatField()),
                ('num_unexplained_reads', models.FloatField()),
                ('pct_r1_transcript_strand_reads', models.FloatField()),
                ('pct_r2_transcript_strand_reads', models.FloatField()),
                ('pct_ribosomal_bases', models.FloatField(null=True)),
                ('pct_coding_bases', models.FloatField()),
                ('pct_utr_bases', models.FloatField()),
                ('pct_intronic_bases', models.FloatField()),
                ('pct_intergenic_bases', models.FloatField()),
                ('pct_mrna_bases', models.FloatField()),
                ('pct_usable_bases', models.FloatField()),
                ('pct_correct_strand_reads', models.FloatField()),
                ('median_cv_coverage', models.FloatField()),
                ('median_5prime_bias', models.FloatField()),
                ('median_3prime_bias', models.FloatField()),
                ('median_5prime_to_3prime_bias', models.FloatField()),
                ('pf_not_aligned_bases', models.FloatField()),
            ],
            options={
                'db_table': 'rnaseq_metrics',
            },
        ),
        migrations.RenameField(
            model_name='vcfqc_data',
            old_name='x_hom_het_ratio',
            new_name='x_het_hom_ratio',
        ),
        migrations.AlterField(
            model_name='vcfqc_data',
            name='gender',
            field=models.CharField(max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='report_sample',
            name='rna_seqc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='trend_monitoring.rna_seqc'),
        ),
        migrations.AddField(
            model_name='picard',
            name='rnaseq_metrics',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='trend_monitoring.rnaseq_metrics'),
        ),
    ]
